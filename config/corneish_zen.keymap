#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};



#define DEFAULT  0
#define NUMBER   1
#define SYMBOL   2
#define MACRO    3

/ {
    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
        
        tabesc: tab_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };
};

/ {
    behaviors {
        spc_ent: space_enter {
            compatible = "zmk,behavior-mod-morph";
            label = "SPACE_ENTER";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp RET>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
        
        shift_caps: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "shift_caps";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
    };
};


/ {
    behaviors {
        lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <500>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <10>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <7 8 9 10 11 12 19 20 21 22 23 24 31 32 33 34 35 36>;    // <---[[right-hand keys]]
        };
    
        rh_pht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <500>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <10>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1 2 3 4 5 6 13 14 15 16 17 18 25 26 27 28 29 30>;    // <---[[left-hand keys]]
        };
    };
};

/ {
    macros {
        screenshot: screenshot {
            label = "screenshot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp GUI>
                , <&macro_tap &kp LSHFT &kp S>
                , <&macro_release &kp GUI>
                ;
        };
        copy: copy {
            label = "copy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp C>
                , <&macro_release &kp LCTRL>
                ;
        };
        cut: cut {
            label = "cut";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp X>
                , <&macro_release &kp LCTRL>
                ;
        };
        paste: paste {
            label = "paste";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                ;
        };
        undo: undo {
            label = "undo";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LCTRL>
                ;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |TAB/ESC |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// | CTRL   |  A  |  R  |  S  |  T  |  D  |   |  H  |  N   |  E  |  I  |  O  |  '   |
// | SHFT   |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M   |  ,  |  .  |  /  | SHFT |
//                  | GUI | NUMBER |SPC ENT|   |SPC ENT| SYMBOL  | ALT |
                        bindings = <
   &tabesc     &kp Q           &kp W          &kp F          &kp P           &kp G   &kp J   &kp L            &kp U              &kp Y            &kp SEMI            &bspc_del
   &kp LCTRL   &kp A           &kp R          &kp S          &kp T           &kp D   &kp H   &kp N            &kp E              &kp I            &kp O               &kp SQT
   &shift_caps &kp Z           &kp X          &kp C          &kp V           &kp B   &kp K   &kp M            &kp COMMA          &kp DOT          &kp FSLH            &kp RSHFT
                  &kp LGUI &to NUMBER &spc_ent  &spc_ent &to SYMBOL &kp RALT
                        >;
                };
                
                lower_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |TAB/ESC|  1  |  2  |  3   |  4  |  5  |   |  6    |  7   |  8  |  9   |  0    | BKSP DEL |
// | CTRL |     |     |      |     |     |   | PG UP | HOME | UP  | END  | PG UP | ENTER  |
// | SHFT |     |     |      |     |     |   | PG DN | LFT  | DWN | RGHT | PG DN | SHIFT  |
//                    | CTRL |DEFAULT|SPC ENT |   |SPC ENT | SYMBOL  | ALT |
                        bindings = <
   &tabesc       &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6       &kp N7       &kp N8     &kp N9      &kp N0      &bspc_del
   &kp LCTRL    &trans       &trans       &trans       &trans       &trans         &kp PG_UP    &kp HOME     &kp UP     &kp END     &kp PG_UP   &kp RET
   &shift_caps  &trans       &trans       &trans       &trans       &trans         &kp PG_DN    &kp LEFT     &kp DOWN   &kp RIGHT   &kp PG_DN   &kp RSHFT
                          	              &kp LCTRL    &to DEFAULT  &spc_ent       &spc_ent   &to SYMBOL   &kp RALT
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// | ` |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |MACRO|     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |NUMBER| SPC |   | ENT |DEFAULT| ALT |
                        bindings = <
   &kp GRAVE     &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT       &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &bspc_del
   &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
   &shift_caps &trans       &trans       &trans       &to MACRO    &trans          &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                    	                            &kp LGUI &to NUMBER   &spc_ent        &spc_ent   &to DEFAULT    &kp RALT
                        >;
                };
                
                macro_layer {
                        label = "MACRO";
// -----------------------------------------------------------------------------------------
// | ESC  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |      |     |     |     |screenshot |         |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT | undo|cut  | copy|paste|     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |DEFAULT| SPC |   | ENT |DEFAULT| ALT |
                        bindings = <
   &kp ESC      &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT       &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &bspc_del
   &none   &none   &none   &screenshot   &none   &none   &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
   &shift_caps  &undo        &cut         &copy        &paste       &trans          &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                    	                            &kp LGUI &to DEFAULT   &spc_ent        &spc_ent   &to DEFAULT    &kp RALT
                        >;
                };
        };
};
